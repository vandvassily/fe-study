import{r as o,c as s,a as e,d as t,F as i,e as l,b as a,o as c}from"./app.9bc35547.js";import{_ as r}from"./plugin-vue_export-helper.5a098b48.js";const p={},d=l(`<h1 id="react\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#react\u6E90\u7801" aria-hidden="true">#</a> React\u6E90\u7801</h1><h2 id="react\u6E90\u7801\u8C03\u8BD5" tabindex="-1"><a class="header-anchor" href="#react\u6E90\u7801\u8C03\u8BD5" aria-hidden="true">#</a> React\u6E90\u7801\u8C03\u8BD5</h2><p>// TODO:</p><h2 id="\u8C03\u7528\u6808" tabindex="-1"><a class="header-anchor" href="#\u8C03\u7528\u6808" aria-hidden="true">#</a> \u8C03\u7528\u6808</h2><p><code>Legacy</code> \u6A21\u5F0F</p><ul><li>ReactDOM.render()</li><li>legacyRenderSubtreeIntoContainer <ul><li>legacyCreateRootFromDOMContainer</li></ul></li><li>unbatchedUpdates \u9996\u6B21\u6E32\u67D3(mount) <ul><li>resetRenderTimer</li><li>flushSyncCallbackQueue</li></ul></li><li>updateContainer</li><li>enqueueUpdate</li><li>scheduleUpdateOnFiber</li><li>performSyncWorkOnRoot <ul><li>renderRootSync</li><li>workLoopSync</li><li>performUnitOfWork</li></ul></li><li>beginWork <ul><li>updateHostRoot <ul><li>reconcileChildren <ul><li>reconcileChildFibers \u6839\u636Echildren\u7684\u7C7B\u578B\uFF0C\u8FDB\u5165\u4E0D\u540C\u7684 reconciler\u65B9\u6CD5</li></ul></li></ul></li></ul></li><li>commitRoot</li><li>commitRootImpl</li><li>commitBeforeMutationEffects</li><li>commitBeforeMutationLifeCycles</li><li>commitPlacement</li><li>insertOrAppendPlacementNodeIntoContainer</li></ul><h3 id="commitroot" tabindex="-1"><a class="header-anchor" href="#commitroot" aria-hidden="true">#</a> commitRoot</h3><p>commit \u9636\u6BB5\uFF0C\u6700\u4E3B\u8981\u7684\u65B9\u6CD5\u5C31\u662F <code>commitRoot</code></p><ul><li>Calls the getSnapshotBeforeUpdate lifecycle method on nodes tagged with the Snapshot effect</li><li>Calls the componentWillUnmount lifecycle method on nodes tagged with the Deletion effect</li><li>Performs all the DOM insertions, updates and deletions</li><li>Sets the finishedWork tree as current</li><li>Calls componentDidMount lifecycle method on nodes tagged with the Placement effect</li><li>Calls componentDidUpdate lifecycle method on nodes tagged with the Update effect</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">commitRoot</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> finishedWork</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">commitBeforeMutationLifecycles</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">commitAllHostEffects</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>current <span class="token operator">=</span> finishedWork<span class="token punctuation">;</span>
    <span class="token function">commitAllLifeCycles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,11),u={href:"https://xiaochen1024.com/courseware/60b1b2f6cf10a4003b634718/60b1b348cf10a4003b634720",target:"_blank",rel:"noopener noreferrer"},h=a("react\u6E90\u7801\u89E3\u67908.render\u9636\u6BB5"),m={href:"https://indepth.dev/posts/1008/inside-fiber-in-depth-overview-of-the-new-reconciliation-algorithm-in-react",target:"_blank",rel:"noopener noreferrer"},f=a("Inside Fiber: in-depth overview of the new reconciliation algorithm in React"),b={href:"https://indepth.dev/posts/1009/in-depth-explanation-of-state-and-props-update-in-react",target:"_blank",rel:"noopener noreferrer"},k=a("In-depth explanation of state and props update in React");function _(g,R){const n=o("OutboundLink");return c(),s(i,null,[d,e("p",null,[e("a",u,[h,t(n)])]),e("p",null,[e("a",m,[f,t(n)])]),e("p",null,[e("a",b,[k,t(n)])])],64)}var C=r(p,[["render",_]]);export{C as default};
