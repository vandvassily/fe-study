import{r as t,c,a as n,d as a,F as l,b as s,e as p,o as u}from"./app.9bc35547.js";import{_ as r}from"./plugin-vue_export-helper.5a098b48.js";const i={},k=n("h1",{id:"\u5F02\u6B65\u66F4\u65B0\u961F\u5217",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F02\u6B65\u66F4\u65B0\u961F\u5217","aria-hidden":"true"},"#"),s(" \u5F02\u6B65\u66F4\u65B0\u961F\u5217")],-1),b=s("\u5728 "),m={href:"https://cn.vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"},d=s("Vue.js2.0 \u5B98\u7F51\u6DF1\u5165\u54CD\u5E94\u5F0F\u539F\u7406"),h=s("\u8FD9\u4E00\u7AE0\u4E2D\uFF0C\u63D0\u5230\u4E86"),_={href:"https://cn.vuejs.org/v2/guide/reactivity.html#%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0%E9%98%9F%E5%88%97",target:"_blank",rel:"noopener noreferrer"},f=s("\u5F02\u6B65\u66F4\u65B0\u961F\u5217"),w=s("\u3002"),v=n("h2",{id:"\u4E3A\u4EC0\u4E48\u5728\u66F4\u65B0dom\u65F6\u662F\u5F02\u6B65\u6267\u884C\u7684",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E3A\u4EC0\u4E48\u5728\u66F4\u65B0dom\u65F6\u662F\u5F02\u6B65\u6267\u884C\u7684","aria-hidden":"true"},"#"),s(" \u4E3A\u4EC0\u4E48\u5728\u66F4\u65B0DOM\u65F6\u662F\u5F02\u6B65\u6267\u884C\u7684\uFF1F")],-1),g={href:"https://cn.vuejs.org/v2/guide/reactivity.html#%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0%E9%98%9F%E5%88%97",target:"_blank",rel:"noopener noreferrer"},y=s("\u5F02\u6B65\u66F4\u65B0\u961F\u5217\u4ECB\u7ECD --- \u6458\u81EA\u5B98\u7F51"),x=n("p",null,[s("\u8003\u8651\u4E00\u4E0B\u8FD9\u4E2A\u573A\u666F\uFF0C\u5728\u540C\u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u53D1\u751F\u6570\u636E\u53D8\u66F4\uFF0C\u4E14\u540C\u4E00\u4E2A "),n("code",null,"watcher"),s(" \u88AB\u591A\u6B21\u89E6\u53D1\u3002")],-1),j=n("p",null,"\u5982\u679C\u662F\u66F4\u65B0DOM\u662F\u540C\u6B65\u6267\u884C\u7684\uFF0C\u90A3\u4E48\u540C\u4E00\u4E2ADOM\u4F1A\u77ED\u65F6\u95F4\u5185\u5148\u540E\u88AB\u66F4\u6539\u591A\u6B21\uFF0C\u6D6A\u8D39\u4E86\u6027\u80FD\u3002",-1),E=n("p",null,"\u91C7\u7528\u5F02\u6B65\u66F4\u65B0DOM\uFF0C\u540C\u4E00\u4E2A watcher \u88AB\u591A\u6B21\u89E6\u53D1\uFF0C\u53EA\u4F1A\u88AB\u63A8\u5165\u5230\u961F\u5217\u4E2D\u4E00\u6B21\uFF0C\u907F\u514D\u4E86\u5F88\u591A\u4E0D\u5FC5\u8981\u7684\u8BA1\u7B97\u3002",-1),D=n("p",null,"\u5728\u4E0B\u4E00\u4E2A\u7684\u4E8B\u4EF6\u5FAA\u73AF\u201Ctick\u201D\u4E2D\uFF0CVue \u5237\u65B0\u961F\u5217\u5E76\u6267\u884C\u5B9E\u9645 (\u5DF2\u53BB\u91CD\u7684) \u5DE5\u4F5C\u3002Vue \u5728\u5185\u90E8\u5BF9\u5F02\u6B65\u961F\u5217\u5C1D\u8BD5\u4F7F\u7528\u539F\u751F\u7684 Promise.then\u3001MutationObserver \u548C setImmediate\uFF0C\u5982\u679C\u6267\u884C\u73AF\u5883\u4E0D\u652F\u6301\uFF0C\u5219\u4F1A\u91C7\u7528 setTimeout(fn, 0) \u4EE3\u66FF\u3002",-1),q=n("p",null,"\u4F8B\u5982\uFF0C\u5F53\u4F60\u8BBE\u7F6E vm.someData = 'new value'\uFF0C\u8BE5\u7EC4\u4EF6\u4E0D\u4F1A\u7ACB\u5373\u91CD\u65B0\u6E32\u67D3\u3002\u5F53\u5237\u65B0\u961F\u5217\u65F6\uFF0C\u7EC4\u4EF6\u4F1A\u5728\u4E0B\u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF\u201Ctick\u201D\u4E2D\u66F4\u65B0\u3002\u591A\u6570\u60C5\u51B5\u6211\u4EEC\u4E0D\u9700\u8981\u5173\u5FC3\u8FD9\u4E2A\u8FC7\u7A0B\uFF0C\u4F46\u662F\u5982\u679C\u4F60\u60F3\u57FA\u4E8E\u66F4\u65B0\u540E\u7684 DOM \u72B6\u6001\u6765\u505A\u70B9\u4EC0\u4E48\uFF0C\u8FD9\u5C31\u53EF\u80FD\u4F1A\u6709\u4E9B\u68D8\u624B\u3002\u867D\u7136 Vue.js \u901A\u5E38\u9F13\u52B1\u5F00\u53D1\u4EBA\u5458\u4F7F\u7528\u201C\u6570\u636E\u9A71\u52A8\u201D\u7684\u65B9\u5F0F\u601D\u8003\uFF0C\u907F\u514D\u76F4\u63A5\u63A5\u89E6 DOM\uFF0C\u4F46\u662F\u6709\u65F6\u6211\u4EEC\u5FC5\u987B\u8981\u8FD9\u4E48\u505A\u3002\u4E3A\u4E86\u5728\u6570\u636E\u53D8\u5316\u4E4B\u540E\u7B49\u5F85 Vue \u5B8C\u6210\u66F4\u65B0 DOM\uFF0C\u53EF\u4EE5\u5728\u6570\u636E\u53D8\u5316\u4E4B\u540E\u7ACB\u5373\u4F7F\u7528 Vue.nextTick(callback)\u3002\u8FD9\u6837\u56DE\u8C03\u51FD\u6570\u5C06\u5728 DOM \u66F4\u65B0\u5B8C\u6210\u540E\u88AB\u8C03\u7528\u3002",-1),O=n("h2",{id:"\u6E90\u7801\u89E3\u6790",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6E90\u7801\u89E3\u6790","aria-hidden":"true"},"#"),s(" \u6E90\u7801\u89E3\u6790")],-1),S=s("\u5F53\u88AB\u89C2\u5BDF\u7684\u6570\u636E\u53D1\u751F\u6539\u53D8\uFF0C\u89E6\u53D1\u66F4\u65B0\u3002"),M={href:"https://github.com/vuejs/vue/blob/v2.6.14/src/core/observer/dep.js#L37",target:"_blank",rel:"noopener noreferrer"},T=s("\u6E90\u7801"),B=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">notify</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// stabilize the subscriber list first</span>
    <span class="token keyword">const</span> subs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> subs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6240\u6709\u7684 watcher \u6267\u884C update</span>
      subs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,1),V=s("\u89C2\u5BDF\u8005\u6267\u884C "),F=n("code",null,"update",-1),Q=s(" \u65B9\u6CD5\u3002"),C={href:"https://github.com/vuejs/vue/blob/v2.6.14/src/core/observer/watcher.js#L164",target:"_blank",rel:"noopener noreferrer"},L=s("\u6E90\u7801"),N=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token doc-comment comment">/**
   * Subscriber interface.
   * Will be called when a dependency changes.
   */</span>
  <span class="token function">update</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore else */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u4E2A\u662F \u8BA1\u7B97\u5C5E\u6027\u89C2\u5BDF\u65F6 \u4F7F\u7528</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u8BBE\u7F6E\u4E3A\u540C\u6B65\u6A21\u5F0F</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u63A8\u5165\u5230\u66F4\u65B0\u961F\u5217\u4E2D</span>
      <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,1),A={href:"https://github.com/vuejs/vue/blob/v2.6.14/src/core/observer/scheduler.js",target:"_blank",rel:"noopener noreferrer"},z=s("\u6E90\u7801"),I=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it&#39;s
 * pushed when the queue is being flushed.
 */</span>
<span class="token comment">// \u5C06\u89C2\u5BDF\u8005\u63A8\u5165\u5230\u89C2\u5BDF\u8005\u961F\u5217\u3002\u9664\u975E\u662F\u961F\u5217\u5DF2\u7ECF\u6267\u884C\u5B8C\uFF0C\u5426\u5219\u76F8\u540C ID \u7684\u89C2\u5BDF\u8005\uFF0C\u4F1A\u88AB\u8DF3\u8FC7\u3002</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">queueWatcher</span> <span class="token punctuation">(</span><span class="token parameter">watcher<span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id
  <span class="token comment">// \u5168\u5C40\u7EF4\u62A4\u4E86\u4E00\u4E2A has \u7684 map \u5BF9\u8C61\uFF0C\u91CC\u8FB9\u5B58\u50A8\u7684\u662F\u5DF2\u7ECF\u63A8\u5165\u7684\u89C2\u5BDF\u8005\u7F16\u53F7</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token comment">// \u5168\u5C40\u7EF4\u62A4\u4E86\u4E00\u4E2A \u66F4\u65B0 \u7684\u72B6\u6001</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flushing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E0D\u662F\u6B63\u5728\u6267\u884C\u66F4\u65B0\u7684\u72B6\u6001\uFF0C\u5219\u76F4\u63A5\u5C06 watcher \u63A8\u5165\u5230\u66F4\u65B0\u961F\u5217\u4E2D</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// if already flushing, splice the watcher based on its id</span>
      <span class="token comment">// if already past its id, it will be run next immediately.</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> queue<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> index <span class="token operator">&amp;&amp;</span> queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">&gt;</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">--</span>
      <span class="token punctuation">}</span>
      queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// queue the flush</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      waiting <span class="token operator">=</span> <span class="token boolean">true</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>async<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">flushSchedulerQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5C06\u961F\u5217\u56DE\u8C03\u63A8\u5165\u5230 EventLoop \u7684\u5F02\u6B65\u961F\u5217\u4E2D</span>
      <span class="token function">nextTick</span><span class="token punctuation">(</span>flushSchedulerQueue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Flush both queues and run the watchers.
 */</span>
<span class="token keyword">function</span> <span class="token function">flushSchedulerQueue</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  currentFlushTimestamp <span class="token operator">=</span> <span class="token function">getNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  flushing <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">let</span> watcher<span class="token punctuation">,</span> id

  <span class="token comment">// Sort queue before flush.</span>
  <span class="token comment">// This ensures that:</span>
  <span class="token comment">// 1. Components are updated from parent to child. (because parent is always</span>
  <span class="token comment">//    created before the child)</span>
  <span class="token comment">// 2. A component&#39;s user watchers are run before its render watcher (because</span>
  <span class="token comment">//    user watchers are created before the render watcher)</span>
  <span class="token comment">// \u4E00\u4E2A\u7EC4\u4EF6\u4E2D\u7528\u6237\u521B\u5EFA\u7684\u89C2\u5BDF\u8005\u8981\u5148\u6267\u884C\uFF08\u56E0\u4E3A\u7528\u6237\u521B\u5EFA\u7684\u89C2\u5BDF\u8005\u5148\u4E8Erender\u89C2\u5BDF\u8005\u521B\u5EFA\uFF09</span>
  <span class="token comment">// 3. If a component is destroyed during a parent component&#39;s watcher run,</span>
  <span class="token comment">//    its watchers can be skipped.</span>
  <span class="token comment">// \u6392\u5E8F\u7684\u76EE\u7684\u662F\u4FDD\u8BC1\u7236\u7EC4\u4EF6\u5148\u6267\u884C\uFF08\u56E0\u4E3A\u7236\u7EC4\u4EF6\u6C38\u8FDC\u5148\u4E8E\u5B50\u7EC4\u4EF6\u521B\u5EFA\uFF0C\u6240\u4EE5 \u7236id &lt; \u5B50id\uFF09</span>
  queue<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span>

  <span class="token comment">// do not cache length because more watchers might be pushed</span>
  <span class="token comment">// as we run existing watchers</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    watcher <span class="token operator">=</span> queue<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>before<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      watcher<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id
    has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token comment">// \u6267\u884C watcher\u5B9E\u4F8B \u7684 run \u65B9\u6CD5</span>
    watcher<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// keep copies of post queues before resetting state</span>
  <span class="token keyword">const</span> activatedQueue <span class="token operator">=</span> activatedChildren<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> updatedQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// \u91CD\u7F6E\u72B6\u6001</span>
  <span class="token function">resetSchedulerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// call component updated and activated hooks</span>
  <span class="token comment">// \u6267\u884C\u7EC4\u4EF6 activated \u548C updated \u94A9\u5B50</span>
  <span class="token function">callActivatedHooks</span><span class="token punctuation">(</span>activatedQueue<span class="token punctuation">)</span>
  <span class="token function">callUpdatedHooks</span><span class="token punctuation">(</span>updatedQueue<span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div>`,1),P=p("<code>nextTick</code> \u65B9\u6CD5\u5C06 <code>flushSchedulerQueue</code> \u56DE\u8C03\u51FD\u6570\u63A8\u5165\u5230 <code>callbacks</code> \u6570\u7EC4\u4E2D\uFF0C\u5F85 <code>EventLoop</code> \u4E2D\u7684\u540C\u6B65\u4EE3\u7801\u6267\u884C\u5B8C\u6BD5\uFF0C<code>JS\u5F15\u64CE</code> \u6E05\u7A7A <code>\u5F02\u6B65\u4EFB\u52A1\u961F\u5217</code> \u65F6\u6267\u884C <code>flushSchedulerQueue</code> \u56DE\u8C03\u3002 ",14),W={href:"https://github.com/vuejs/vue/blob/v2.6.14/src/core/util/next-tick.js#L87",target:"_blank",rel:"noopener noreferrer"},J=s("\u6E90\u7801"),H=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">nextTick</span> <span class="token punctuation">(</span><span class="token parameter">cb<span class="token operator">?</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> ctx<span class="token operator">?</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> _resolve
  <span class="token comment">// \u7EF4\u62A4\u4E86\u4E00\u4E2A callbacks \u6570\u7EC4\uFF0C\u91CC\u8FB9\u5B58\u653E\u7684\u662F flushSchedulerQueue \u56DE\u8C03\u51FD\u6570</span>
  callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> <span class="token string">&#39;nextTick&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">_resolve</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pending <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token comment">// \u6267\u884C\u5F02\u6B65 timerFunc \u65B9\u6CD5</span>
    <span class="token comment">// \u8BE5\u65B9\u6CD5\u9488\u5BF9\u4E0D\u540C\u6D4F\u89C8\u5668\u505A\u4E86\u517C\u5BB9\u964D\u7EA7\u5904\u7406 Promise -&gt; MutationObserver -&gt; setImmediate -&gt; setTimeout</span>
    <span class="token comment">// \u6E90\u7801\uFF1Ahttps://github.com/vuejs/vue/blob/v2.6.14/src/core/util/next-tick.js#L33</span>
    <span class="token function">timerFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// $flow-disable-line</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cb <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      _resolve <span class="token operator">=</span> resolve
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>`,1),U=n("code",null,"timerFunc",-1),$=s(" \u5F02\u6B65\u6267\u884C "),G=n("code",null,"flushCallbacks",-1),K=s(" \uFF0C\u6267\u884C\u5E76\u6E05\u7A7A "),R=n("code",null,"callbacks",-1),X=s(" \u6570\u7EC4\u3002 "),Y={href:"https://github.com/vuejs/vue/blob/v2.6.14/src/core/util/next-tick.js#L13",target:"_blank",rel:"noopener noreferrer"},Z=s("\u6E90\u7801"),nn=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flushCallbacks</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  pending <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token keyword">const</span> copies <span class="token operator">=</span> callbacks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  callbacks<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> copies<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    copies<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u5B9E\u9645\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u9645\u5E94\u7528" aria-hidden="true">#</a> \u5B9E\u9645\u5E94\u7528</h2><p>\u4F8B\u5982\uFF0C\u5F53 <code>data.count</code> \u7684\u6570\u503C\u66F4\u6539\u4E3A <code>1</code> \uFF0C\u901A\u8FC7 <code>this.count</code> \u8BBF\u95EE\u5F97\u5230\u7684\u6570\u503C\u4E5F\u662F <code>1</code> \u3002\u4F46\u662F <code>DOM</code> \u4E0A\u7684\u66F4\u65B0\u65F6\u5F02\u6B65\u6267\u884C\u7684\uFF0C\u6211\u4EEC\u5728\u5F02\u6B65\u4EFB\u52A1\u672A\u6267\u884C\u5B8C\u6210\u524D\u8C03\u7528\u539F\u751FJS\u7684\u65B9\u6CD5\u53BB\u83B7\u53D6 <code>DOM</code> \u4E0A\u7684\u6570\u503C\uFF0C\u5219\u8FD8\u662F\u66F4\u65B0\u4E4B\u524D\u7684 <code>0</code> \u3002\u901A\u8FC7\u4F7F\u7528\u5B98\u65B9\u63D0\u4F9B\u7684 <code>nextTick</code> \u65B9\u6CD5\uFF0C\u5C31\u53EF\u4EE5\u5728\u56DE\u8C03\u4E2D\u83B7\u53D6\u5230\u6700\u65B0\u7684\u503C <code>1</code> \u3002</p>`,3);function sn(an,en){const e=t("OutboundLink"),o=t("CodeSandbox");return u(),c(l,null,[k,n("p",null,[b,n("a",m,[d,a(e)]),h,n("a",_,[f,a(e)]),w]),v,n("p",null,[n("a",g,[y,a(e)])]),x,j,E,D,q,O,n("p",null,[S,n("a",M,[T,a(e)])]),B,n("p",null,[V,F,Q,n("a",C,[L,a(e)])]),N,n("p",null,[n("a",A,[z,a(e)])]),I,n("p",null,[P,n("a",W,[J,a(e)])]),H,n("p",null,[U,$,G,K,R,X,n("a",Y,[Z,a(e)])]),nn,a(o,{sandboxUrl:"https://codesandbox.io/embed/vue2-nexttick-wzdzk?fontsize=14&hidenavigation=1&theme=dark"})],64)}var on=r(i,[["render",sn]]);export{on as default};
