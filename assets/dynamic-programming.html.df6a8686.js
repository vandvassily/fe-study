import{r as p,c as t,a as s,d as o,F as e,e as c,b as n,o as u}from"./app.9bc35547.js";import{_ as l}from"./plugin-vue_export-helper.5a098b48.js";const r={},i=c(`<h1 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h1><p>\u4E3B\u8981\u662F\u8981\u627E\u5230 <code>\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B</code> \u3002\u7C7B\u4F3C\u4E8E <code>f(n) = f(n-1) + f(n-2)</code> \u3002</p><p>\u5927\u81F4\u7684\u610F\u601D\u5C31\u662F \u5F53\u524D\u4F4D\u7F6E\u7684\u503C\uFF0C\u9700\u8981\u6839\u636E\u4E4B\u524D\u4E00\u6B65\u6216N\u6B65\u7684\u503C\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><ol><li>\u58F0\u660E dp \u6570\u7EC4\uFF08\u4E00\u7EF4\u6216\u8005\u591A\u7EF4\u6570\u7EC4\uFF09</li><li>\u6784\u9020\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF0C<code>f(n) = f(n-1) + f(n-2)</code></li><li>\u6CE8\u610F\u8FB9\u754C\u503C\u6761\u4EF6\u3002</li></ol><h2 id="\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B" aria-hidden="true">#</a> \u5B9E\u4F8B</h2><p>\u6539\u4E86\u4E00\u4E0B\u9898\u76EE\u63CF\u8FF0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7ED9\u5B9A\u4E00\u4E2An*n\u7684\u8868\u683C\uFF0C\u6BCF\u4E2A\u683C\u5B50\u4F1A\u6709\u4E00\u4E2A\u6B63\u6574\u6570\u3002</span>
<span class="token comment">// \u73B0\u5728\u4E00\u4EBA\u4ECE(0\uFF0C0)\u5F00\u59CB\u51FA\u53D1\uFF0C\u53EA\u80FD\u5411\u53F3\u6216\u8005\u5411\u4E0B\u524D\u8FDB\uFF0C\u6BCF\u7ECF\u8FC7\u4E00\u4E2A\u683C\u5B50\uFF0C\u5386\u7A0B\u90FD\u4F1A\u589E\u52A0\u76F8\u5E94\u7684\u516C\u91CC\u6570\u3002</span>
<span class="token comment">// \u95EE\u6B64\u4EBA\u5230\u8FBE(n-1, n-1)\u6700\u5C11\u9700\u8981\u591A\u5C11\u8D70\u591A\u5C11\u516C\u91CC\uFF1F</span>
<span class="token comment">// \u793A\u4F8B\uFF1A\u8F93\u5165: [[0,4],[3,5]]</span>
<span class="token comment">// \u8F93\u51FA\uFF1A8</span>

<span class="token keyword">const</span> input <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u52A8\u6001\u89C4\u5212</span>
<span class="token keyword">function</span> <span class="token function">cost</span><span class="token punctuation">(</span><span class="token parameter">grid <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> firstRow <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>firstRow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> firstRow<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> firstRow<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> row <span class="token operator">=</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> rowArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    rowArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> row<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> currValue <span class="token operator">=</span> row<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// \u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B</span>
      <span class="token comment">// \u6BD4\u8F83\u5DE6\u4FA7\u548C\u4E0A\u4FA7\uFF0C\u5F97\u5230\u6700\u5C0F\u503C\uFF0C\u4E0E\u5F53\u524D\u503C\u76F8\u52A0</span>
      rowArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>rowArray<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> currValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    dp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rowArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> dp<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>firstRow<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">cost</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div>`,8),k=n("\u5176\u5B9E\u8FD9\u4E2A\u5C31\u662F \u539F\u9898 "),b={href:"https://leetcode-cn.com/problems/minimum-path-sum/",target:"_blank",rel:"noopener noreferrer"},m=n("LeetCode NO.64"),d=n("\u3002");function h(f,w){const a=p("OutboundLink");return u(),t(e,null,[i,s("p",null,[k,s("a",b,[m,o(a)]),d])],64)}var g=l(r,[["render",h]]);export{g as default};
